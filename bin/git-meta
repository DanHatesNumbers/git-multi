#!/usr/bin/env ruby

$LOAD_PATH.unshift File.expand_path(File.join(File.dirname(__FILE__), '..', 'lib'))

require 'git/meta'

module Git::Meta

  # FIXME update organizations as part of `--refresh`

  def github_organizations
    @github_organizations || client.organizations
  end

  module_function :github_organizations

  ORGANIZATIONS = git_option('github.organizations').split(/\s*,\s*/)
  # XXX_ORGANIZATIONS = Git::Meta.github_organizations.map(&:login)

end

if __FILE__ == $0

  case (command = ARGV.shift)
  when /\A--/
    case command
      when '--help'    then Git::Meta::Commands.help
      when '--info'    then Git::Meta::Commands.info
      when '--check'   then Git::Meta::Commands.check
      when '--version' then Git::Meta::Commands.version
      when '--refresh' then Git::Meta::Commands.refresh
      when '--list'    then Git::Meta::Commands.list
      when '--stale'   then Git::Meta::Commands.stale
      when '--graph'   then Git::Meta::Commands.graph
      when '--count'   then Git::Meta::Commands.count
      when '--missing' then Git::Meta::Commands.missing
      when '--report'  then Git::Meta::Commands.report
      when '--excess'  then Git::Meta::Commands.excess
      when '--clone'   then Git::Meta::Commands.clone
      when '--query'   then Git::Meta::Commands.query(ARGV)
      when '--eval'    then Git::Meta::Commands.eval(*ARGV)
      when '--raw'     then Git::Meta::Commands.raw(ARGV)
    else
      abort "Unknown 'git-meta' sub-command: #{command}\n"\
            "(use --help/-h to list all available commands)"
    end
  when *[nil, '', '-h']
    Git::Meta::Commands.help
  else
    Git::Meta::Commands.report
    Git::Meta::Commands.exec command, ARGV
  end

end

# That's all, Folks
