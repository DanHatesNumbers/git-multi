#!/usr/bin/env ruby

lib = File.expand_path('../../lib', __FILE__)
$LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)
require 'git/meta'

case (command = ARGV.shift)
when /\A--/
  case command
  when '--version' then Git::Meta::Commands.version
  when '--help'    then Git::Meta::Commands.help
  when '--check'   then Git::Meta::Commands.check
  when '--refresh' then Git::Meta::Commands.refresh
  when '--json'    then Git::Meta::Commands.json
  when '--count'   then Git::Meta::Commands.count
  when '--list'    then Git::Meta::Commands.list
  when '--archived'then Git::Meta::Commands.archived
  when '--forked'  then Git::Meta::Commands.forked
  when '--private' then Git::Meta::Commands.private
  when '--paths'   then Git::Meta::Commands.paths
  when '--spurious'then Git::Meta::Commands.spurious
  when '--missing' then Git::Meta::Commands.missing
  when '--stale'   then Git::Meta::Commands.stale
  when '--excess'  then Git::Meta::Commands.excess
  when '--clone'   then Git::Meta::Commands.clone
  when '--query'   then Git::Meta::Commands.query(ARGV)
  when '--find'    then Git::Meta::Commands.find(ARGV)
  when '--eval'    then Git::Meta::Commands.eval(ARGV)
  when '--raw'     then Git::Meta::Commands.raw(ARGV)
  else
    abort \
      "Unknown 'git meta' command: #{command}\n\n" \
      "(use --help/-h to list all available commands)"
  end
when nil, '', '-h'
  Git::Meta::Commands.help
else
  Git::Meta::Commands.report
  Git::Meta::Commands.exec command, ARGV
end

# That's all Folks!
